{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.jsx","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","hasMovie","onHasMovie","addMovie","onAddMovie","useState","movieTitle","setMovieTitle","foundMovie","setFoundMovie","hasSearchError","setSearchError","onSubmit","event","preventDefault","htmlFor","name","type","id","placeholder","classNames","input","value","onChange","target","onClick","fetch","then","response","json","Response","Promise","reject","Title","Plot","Poster","imdbID","newMovie","resolve","catch","button","App","state","data","movieId","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.628773f7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ onHasMovie: hasMovie, onAddMovie: addMovie }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [hasSearchError, setSearchError] = useState(false);\n\n  const handleInput = (event) => {\n    setMovieTitle(event.target.value);\n  };\n\n  const searchMovie = () => {\n    request(movieTitle)\n      .then((response) => {\n        if (response.Response === 'False') {\n          return Promise.reject(setFoundMovie(null));\n        }\n\n        const { Title, Plot, Poster, imdbID } = response;\n        const newMovie = {\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbId: imdbID,\n          imdbUrl: `\"https://www.imdb.com/title/${imdbID}`,\n        };\n\n        setFoundMovie(newMovie);\n        setMovieTitle('');\n\n        return Promise.resolve(setSearchError(false));\n      })\n      .catch(() => setSearchError(true));\n  };\n\n  const submitMovie = (event) => {\n    event.preventDefault();\n    if (foundMovie && !hasMovie(foundMovie.imdbId)) {\n      addMovie(foundMovie);\n      setFoundMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              name=\"movieTitle\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                input: true,\n                'is-danger': hasSearchError,\n              })}\n              value={movieTitle}\n              onChange={handleInput}\n            />\n          </div>\n\n          {hasSearchError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className={classNames({\n                button: true,\n                'is-primary': foundMovie,\n              })}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {foundMovie && (\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n\n        <MovieCard {...foundMovie} />\n      </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onHasMovie: PropTypes.func.isRequired,\n  onAddMovie: PropTypes.func.isRequired,\n};\n","export function request(title) {\n  const url = 'https://www.omdbapi.com/?apikey=8d990354';\n\n  return fetch(`${url}&t=${title}`)\n    .then(response => response.json());\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  hasMovie = movieId => this.state.movies.find(\n    movie => movie.imdbId === movieId,\n  );\n\n  addMovie = (newMovie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        newMovie,\n      ],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n    const { hasMovie, addMovie } = this;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            onHasMovie={hasMovie}\n            onAddMovie={addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}